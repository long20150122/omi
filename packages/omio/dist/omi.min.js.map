{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/style.js","../src/vdom/diff.js","../src/define.js","../src/vdom/component-recycler.js","../src/obaa.js","../src/tick.js","../src/observe.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/rpx.js","../src/model-view.js","../src/class.js","../src/render-to-string.js","../src/options.js","../src/tag.js","../src/get-host.js","../node_modules/htm/dist/htm.mjs","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","arguments","length","stack","push","pop","String","p","key","options","vnode","toObject","val","TypeError","Object","assign","target","from","symbols","to","s","hasOwnProperty","call","getOwnPropertySymbols","propIsEnumerable","extend","obj","props","applyRef","ref","value","current","isArray","prototype","toString","nProps","result","keys","forEach","getUse","data","paths","path","index","getTargetByPath","tempPath","tempVal","args","apply","origin","arr","replace","split","len","cloneElement","slice","ATTR_KEY","component","debounceRendering","defer","rerender","items","enqueueRender","renderComponent","mapping","hydrating","isSameNodeType","node","splitText","_componentConstructor","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","map","o","x","trim","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","IS_NON_DIMENSIONAL$1","test","oldJson","currentJson","changed","ckey","setStyles","substring","addEventListener","eventProxy","useCapture","touchStart","touchEnd","_listeners","setProperty","removeEventListener","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","e","this","type","event","___touchY","touches","pageY","Math","abs","changedTouches","pageX","___touchX","document","body","scrollTop","___scrollTop","dispatchEvent","CustomEvent","styleCache","item","ctor","attrName","getCtorName","styleId","prefix","css","g0","g1","g2","g3","addStyle","id","ele","appendClass","head","getElementsByTagName","appendChild","someThingStyles","getElementById","textContent","window","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","addStyleToHead","scopedStyle","addScopedAttrStatic","vdom","staticStyleMapping","scoper","diffLevel","c","mounts","isSvgMode","afterMount","constructor","diff","dom","context","mountAll","parent","componentRoot","ret","out","prevSvgMode","vnodeName","buildComponentFromVNode","_component","createTextNode","replaceChild","recollectNodeTree","__omiattr_","vchildren","innerDiffNode","fc","nodeValue","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","__key","vchild","min","undefined","nextSibling","idiff","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","use","getPath","updatePath","getUpdatePath","ARRAYTYPE","dataToPath","OBJECTTYPE","_objToPath","_arrayToPath","components","Ctor","render","Component","inst","createComponent","store","initUse","_updatePath","instances","list","splice","doRender","exec","fn","scope","size","nextItem","timeout","fireTick","callbacks","nextTickCallback","update","proxyUpdate","obaa","opts","_disable","__ref","prevProps","isChild","rendered","previousProps","initialChildComponent","previousState","previousContext","isUpdate","nextBase","initialBase","shallowComparison","skip","beforeUpdate","prevState","prevContext","beforeRender","getChildContext","childComponent","scopeHost","base","_parentComponent","getNodeProps","cbase","toUnmount","baseParent","SYNC_RENDER","unmountComponent","t","componentRef","afterUpdate","updated","unshift","_renderCallbacks","flushMounts","oldDom","isDirectOwner","setComponentProps","isOwner","originalComponent","beforeUnmount","inner","firstChild","obsStore","extendStoreUpate","merge","prop","fixPath","patchs","patch","_this","updateAll","matchGlobalData","globalData","querySelector","needUpdate","instance","onChange","diffResult","keyA","includePath","indexOf","keyB","pathB","pathA","substr","mpPath","rpx","isNaN","innerWidth","define","Constructor","_possibleConstructorReturn","Number","self","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","ModelView","hasOwn","classNames","arg","classes","argType","join","extractClass","_Array$prototype$slic","class","className","VOID_ELEMENTS","isLargeString","str","JS_TO_CSS","scopedCSS","_renderToString","values","html","pretty","encodeEntities","isComponent","indentChar","__x","cssStr","cssAttr","install","scopedCSSAttr","v","sortAttributes","hooked","styleObjToCss","attributeHook","sub","isVoid","pieces","indent","childSvgMode","hasLarge","assign$1","htm","r","n","createRef","isWeb","root","global","propertyIsEnumerable","Element","runListeners","oEvent","iLstId","iElId","oEvtListeners","oListeners","aEls","aEvts","sEventType","fListener","nElIdx","aElListeners","proto","F","Error","usePromise","Promise","__config__","platform","systemVersion","resolve","then","bind","setTimeout","ASYNC_RENDER","_observe","callback","$observer","eventPropArr","isInArray","isString","$observeProps","$observerPath","watch","propertyChangedHandler","propChanged","currentValue","onPropertyChanged","oldValue","handler","rootName","mock","methods","all","RegExp","triggerStr","cprop","isFunction","toUpperCase","defineProperty","set","_getRootName","collectComponent","_willUpdate","elementId","componentChange","detail","fire","is","_Component","_classCallCheck$1","ignoreLines","u","Map","get","defineElement","Omi","WeElement","omi","getHost","renderToString","tag","module","exports"],"mappings":"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","file":"omi.min.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = [],\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children.length === 0) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = nodeName\n  p.children = children\n\tp.attributes = attributes == null ? undefined : attributes\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","'use strict'\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined')\n  }\n\n  return Object(val)\n}\n\nexport function assign(target, source) {\n  var from\n  var to = toObject(target)\n  var symbols\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s])\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key]\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from)\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]]\n        }\n      }\n    }\n  }\n\n  return to\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.addEventListener) {\n  var oListeners = {};\n  function runListeners(oEvent) {\n    if (!oEvent) { oEvent = window.event; }\n    for (var iLstId = 0, iElId = 0, oEvtListeners = oListeners[oEvent.type]; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) {\n        for (iLstId; iLstId < oEvtListeners.aEvts[iElId].length; iLstId++) { oEvtListeners.aEvts[iElId][iLstId].call(this, oEvent); }\n        break;\n      }\n    }\n  }\n  Element.prototype.addEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (oListeners.hasOwnProperty(sEventType)) {\n      var oEvtListeners = oListeners[sEventType];\n      for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n        if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n      }\n      if (nElIdx === -1) {\n        oEvtListeners.aEls.push(this);\n        oEvtListeners.aEvts.push([fListener]);\n        this[\"on\" + sEventType] = runListeners;\n      } else {\n        var aElListeners = oEvtListeners.aEvts[nElIdx];\n        if (this[\"on\" + sEventType] !== runListeners) {\n          aElListeners.splice(0);\n          this[\"on\" + sEventType] = runListeners;\n        }\n        for (var iLstId = 0; iLstId < aElListeners.length; iLstId++) {\n          if (aElListeners[iLstId] === fListener) { return; }\n        }\n        aElListeners.push(fListener);\n      }\n    } else {\n      oListeners[sEventType] = { aEls: [this], aEvts: [[fListener]] };\n      this[\"on\" + sEventType] = runListeners;\n    }\n  };\n  Element.prototype.removeEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (!oListeners.hasOwnProperty(sEventType)) { return; }\n    var oEvtListeners = oListeners[sEventType];\n    for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n    }\n    if (nElIdx === -1) { return; }\n    for (var iLstId = 0, aElListeners = oEvtListeners.aEvts[nElIdx]; iLstId < aElListeners.length; iLstId++) {\n      if (aElListeners[iLstId] === fListener) { aElListeners.splice(iLstId, 1); }\n    }\n  };\n}\n\n\nif (typeof Object.create !== 'function') {\n  Object.create = function(proto, propertiesObject) {\n    if (typeof proto !== 'object' && typeof proto !== 'function') {\n      throw new TypeError('Object prototype may only be an Object: ' + proto)\n    } else if (proto === null) {\n      throw new Error(\n        \"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\"\n      )\n    }\n\n    // if (typeof propertiesObject != 'undefined') {\n    //     throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\n    // }\n\n    function F() {}\n    F.prototype = proto\n\n    return new F()\n  }\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n  }\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n  if (ref) {\n    if (typeof ref == 'function') ref(value)\n    else ref.current = value\n  }\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nexport function nProps(props) {\n  if (!props || isArray(props)) return {}\n  const result = {}\n  Object.keys(props).forEach(key => {\n    result[key] = props[key].value\n  })\n  return result\n}\n\nexport function getUse(data, paths) {\n  const obj = []\n  paths.forEach((path, index) => {\n    const isPath = typeof path === 'string'\n    if (isPath) {\n      obj[index] = getTargetByPath(data, path)\n    } else {\n      const key = Object.keys(path)[0]\n      const value = path[key]\n      if (typeof value === 'string') {\n        obj[index] = getTargetByPath(data, value)\n      } else {\n        const tempPath = value[0]\n        if (typeof tempPath === 'string') {\n          const tempVal = getTargetByPath(data, tempPath)\n          obj[index] = value[1] ? value[1](tempVal) : tempVal\n        } else {\n          const args = []\n          tempPath.forEach(path =>{\n            args.push(getTargetByPath(data, path))\n          })\n          obj[index] = value[1].apply(null, args)\n        }\n      }\n      obj[key] = obj[index]\n    }\n  })\n  return obj\n}\n\nexport function getTargetByPath(origin, path) {\n  const arr = path.replace(/]/g, '').replace(/\\[/g, '.').split('.')\n  let current = origin\n  for (let i = 0, len = arr.length; i < len; i++) {\n    current = current[arr[i]]\n  }\n  return current\n}\n","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__omiattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = []\n\nexport function enqueueRender(component) {\n  if (items.push(component) == 1) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p\n\twhile ( (p = items.pop()) ) {\n    renderComponent(p)\n\t}\n}","import { extend } from '../util'\nimport options from '../options'\n\nconst mapping = options.mapping\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  if (typeof vnode.nodeName === 'string') {\n    var ctor = mapping[vnode.nodeName]\n    if (ctor) {\n      return hydrating || node._componentConstructor === ctor\n    }\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport { applyRef } from '../util'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n  let node = isSvg\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : options.doc.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\nfunction parseCSSText(cssText) {\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n  let style = {},\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n  let properties = rule\n    .split(';')\n    .map(o => o.split(':').map(x => x && x.trim()))\n  for (let [property, value] of properties) style[cssToJs(property)] = value\n  return style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    applyRef(old, null)\n    applyRef(value, node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (options.isWeb) {\n      if (!value || typeof value === 'string' || typeof old === 'string') {\n        node.style.cssText = value || ''\n      }\n      if (value && typeof value === 'object') {\n        if (typeof old !== 'string') {\n          for (let i in old) if (!(i in value)) node.style[i] = ''\n        }\n        for (let i in value) {\n          node.style[i] =\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n              ? value[i] + 'px'\n              : value[i]\n        }\n      }\n    } else {\n      let oldJson = old,\n        currentJson = value\n      if (typeof old === 'string') {\n        oldJson = parseCSSText(old)\n      }\n      if (typeof value == 'string') {\n        currentJson = parseCSSText(value)\n      }\n\n      let result = {},\n        changed = false\n\n      if (oldJson) {\n        for (let key in oldJson) {\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\n            result[key] = ''\n            changed = true\n          }\n        }\n\n        for (let ckey in currentJson) {\n          if (currentJson[ckey] !== oldJson[ckey]) {\n            result[ckey] = currentJson[ckey]\n            changed = true\n          }\n        }\n\n        if (changed) {\n          node.setStyles(result)\n        }\n      } else {\n        node.setStyles(currentJson)\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) {\n        node.addEventListener(name, eventProxy, useCapture)\n        if (name == 'tap') {\n          node.addEventListener('touchstart', touchStart, useCapture)\n          node.addEventListener('touchend', touchEnd, useCapture)\n        }\n      }\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n      if (name == 'tap') {\n        node.removeEventListener('touchstart', touchStart, useCapture)\n        node.removeEventListener('touchend', touchEnd, useCapture)\n      }\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n    setProperty(node, name, value == null ? '' : value)\n    if (value == null || value === false) node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns)\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      else node.setAttribute(name, value)\n    }\n  }\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n  try {\n    node[name] = value\n  } catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n\nfunction touchStart(e) {\n  this.___touchX = e.touches[0].pageX\n  this.___touchY = e.touches[0].pageY\n  this.___scrollTop = document.body.scrollTop\n}\n\nfunction touchEnd(e) {\n  if (\n    Math.abs(e.changedTouches[0].pageX - this.___touchX) < 30 &&\n    Math.abs(e.changedTouches[0].pageY - this.___touchY) < 30 &&\n    Math.abs(document.body.scrollTop - this.___scrollTop) < 30\n  ) {\n    this.dispatchEvent(new CustomEvent('tap', { detail: e }))\n  }\n}","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 's' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttrStatic(vdom, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n  } \n}\n\nexport function addStyleToHead(style, attr) {\n  if (options.scopedStyle) {\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom === 'object') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.css = vdom.css || {}\n    vdom.css[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n\nexport function scopeHost(vdom, css) {\n  if (typeof vdom === 'object' && css) {\n    vdom.attributes = vdom.attributes || {}\n    for (let key in css) {\n      vdom.attributes[key] = ''\n    }\n  }\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { applyRef } from '../util'\nimport { removeNode } from '../dom/index'\nimport { isArray } from '../util'\nimport { addStyleToHead, getCtorName } from '../style'\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.pop())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.installed) c.installed()\n    if (c.constructor.css || c.css) {\n      addStyleToHead(c.constructor.css ? c.constructor.css : (typeof c.css === 'function' ? c.css() : c.css), '_s' + getCtorName(c.constructor))\n    }\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n  let ret\n\n  if (isArray(vnode)) {\n    vnode = {\n      nodeName: 'span',\n      children: vnode\n    }\n  }\n\n  ret = idiff(dom, vnode, context, mountAll, componentRoot)\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n  if (typeof vnodeName == 'function') {\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    //ie8 error\n    try {\n      out[ATTR_KEY] = true\n    } catch (e) {}\n\n    return out\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      context,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (!child && min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null) applyRef(node[ATTR_KEY].ref, null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import options from './options'\n\nconst OBJECTTYPE = '[object Object]'\nconst ARRAYTYPE = '[object Array]'\n\nexport function define(name, ctor) {\n  options.mapping[name] = ctor\n  if (ctor.use) {\n    ctor.updatePath = getPath(ctor.use)\n  } else if (ctor.data) { //Compatible with older versions\n    ctor.updatePath = getUpdatePath(ctor.data)\n  }\n}\n\nexport function getPath(obj) {\n  if (Object.prototype.toString.call(obj) === '[object Array]') {\n    const result = {}\n    obj.forEach(item => {\n      if (typeof item === 'string') {\n        result[item] = true\n      } else {\n        const tempPath = item[Object.keys(item)[0]]\n        if (typeof tempPath === 'string') {\n          result[tempPath] = true\n        } else {\n          if(typeof tempPath[0] === 'string'){\n            result[tempPath[0]] = true\n          }else{\n            tempPath[0].forEach(path => result[path] = true)\n          }\n        }\n      }\n    })\n    return result\n  } else {\n    return getUpdatePath(obj)\n  }\n}\n\nexport function getUpdatePath(data) {\n  const result = {}\n  dataToPath(data, result)\n  return result\n}\n\nfunction dataToPath(data, result) {\n  Object.keys(data).forEach(key => {\n    result[key] = true\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], key, result)\n    }\n  })\n}\n\nfunction _objToPath(data, path, result) {\n  Object.keys(data).forEach(key => {\n    result[path + '.' + key] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], path + '.' + key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], path + '.' + key, result)\n    }\n  })\n}\n\nfunction _arrayToPath(data, path, result) {\n  data.forEach((item, index) => {\n    result[path + '[' + index + ']'] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(item)\n    if (type === OBJECTTYPE) {\n      _objToPath(item, path + '[' + index + ']', result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(item, path + '[' + index + ']', result)\n    }\n  })\n}\n","import Component from '../component'\nimport { getUse } from '../util'\nimport { getPath } from  '../define'\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {}\n\n/** Reclaim a component for later re-use by the recycler. */\nexport function collectComponent(component) {\n  let name = component.constructor.name\n  ;(components[name] || (components[name] = [])).push(component)\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nexport function createComponent(Ctor, props, context, vnode) {\n  let list = components[Ctor.name],\n    inst\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, context)\n    Component.call(inst, props, context)\n  } else {\n    inst = new Component(props, context)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n  vnode && (inst.scopedCssAttr = vnode.css)\n\n  if ( inst.store && inst.store.data) {\n\t\tif(inst.constructor.use){\n\t\t\tinst.use = getUse(inst.store.data, inst.constructor.use)\n\t\t\tinst.store.instances.push(inst)\n\t\t} else if(inst.initUse){\n\t\t\tconst use = inst.initUse()\n\t\t\tinst._updatePath = getPath(use)\n\t\t\tinst.use = getUse(inst.store.data, use)\n\t\t\tinst.store.instances.push(inst)\n\t\t}\n\n\n  }\n\n  if (list) {\n    for (let i = list.length; i--; ) {\n      if (list[i].constructor === Ctor) {\n        inst.nextBase = list[i].nextBase\n        list.splice(i, 1)\n        break\n      }\n    }\n  }\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, data, context) {\n  return this.constructor(props, context)\n}\n","/* obaa 1.0.0\n * By dntzhang\n * Github: https://github.com/Tencent/omi\n * MIT Licensed.\n */\n\nvar obaa = function(target, arr, callback) {\n  var _observe = function(target, arr, callback) {\n    if (!target.$observer) target.$observer = this\n    var $observer = target.$observer\n    var eventPropArr = []\n    if (obaa.isArray(target)) {\n      if (target.length === 0) {\n        target.$observeProps = {}\n        target.$observeProps.$observerPath = '#'\n      }\n      $observer.mock(target)\n    }\n    for (var prop in target) {\n      if (target.hasOwnProperty(prop)) {\n        if (callback) {\n          if (obaa.isArray(arr) && obaa.isInArray(arr, prop)) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          } else if (obaa.isString(arr) && prop == arr) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          }\n        } else {\n          eventPropArr.push(prop)\n          $observer.watch(target, prop)\n        }\n      }\n    }\n    $observer.target = target\n    if (!$observer.propertyChangedHandler) $observer.propertyChangedHandler = []\n    var propChanged = callback ? callback : arr\n    $observer.propertyChangedHandler.push({\n      all: !callback,\n      propChanged: propChanged,\n      eventPropArr: eventPropArr\n    })\n  }\n  _observe.prototype = {\n    onPropertyChanged: function(prop, value, oldValue, target, path) {\n      if (value !== oldValue && this.propertyChangedHandler) {\n        var rootName = obaa._getRootName(prop, path)\n        for (\n          var i = 0, len = this.propertyChangedHandler.length;\n          i < len;\n          i++\n        ) {\n          var handler = this.propertyChangedHandler[i]\n          if (\n            handler.all ||\n            obaa.isInArray(handler.eventPropArr, rootName) ||\n            rootName.indexOf('Array-') === 0\n          ) {\n            handler.propChanged.call(this.target, prop, value, oldValue, path)\n          }\n        }\n      }\n      if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n        this.watch(target, prop, target.$observeProps.$observerPath)\n      }\n    },\n    mock: function(target) {\n      var self = this\n      obaa.methods.forEach(function(item) {\n        target[item] = function() {\n          var old = Array.prototype.slice.call(this, 0)\n          var result = Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n          if (new RegExp('\\\\b' + item + '\\\\b').test(obaa.triggerStr)) {\n            for (var cprop in this) {\n              if (this.hasOwnProperty(cprop) && !obaa.isFunction(this[cprop])) {\n                self.watch(this, cprop, this.$observeProps.$observerPath)\n              }\n            }\n            //todo\n            self.onPropertyChanged(\n              'Array-' + item,\n              this,\n              old,\n              this,\n              this.$observeProps.$observerPath\n            )\n          }\n          return result\n        }\n        target[\n          'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n        ] = function() {\n          return Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n        }\n      })\n    },\n    watch: function(target, prop, path) {\n      if (prop === '$observeProps' || prop === '$observer') return\n      if (obaa.isFunction(target[prop])) return\n      if (!target.$observeProps) target.$observeProps = {}\n      if (path !== undefined) {\n        target.$observeProps.$observerPath = path\n      } else {\n        target.$observeProps.$observerPath = '#'\n      }\n      var self = this\n      var currentValue = (target.$observeProps[prop] = target[prop])\n      Object.defineProperty(target, prop, {\n        get: function() {\n          return this.$observeProps[prop]\n        },\n        set: function(value) {\n          var old = this.$observeProps[prop]\n          this.$observeProps[prop] = value\n          self.onPropertyChanged(\n            prop,\n            value,\n            old,\n            this,\n            target.$observeProps.$observerPath\n          )\n        }\n      })\n      if (typeof currentValue == 'object') {\n        if (obaa.isArray(currentValue)) {\n          this.mock(currentValue)\n          if (currentValue.length === 0) {\n            if (!currentValue.$observeProps) currentValue.$observeProps = {}\n            if (path !== undefined) {\n              currentValue.$observeProps.$observerPath = path\n            } else {\n              currentValue.$observeProps.$observerPath = '#'\n            }\n          }\n        }\n        for (var cprop in currentValue) {\n          if (currentValue.hasOwnProperty(cprop)) {\n            this.watch(\n              currentValue,\n              cprop,\n              target.$observeProps.$observerPath + '-' + prop\n            )\n          }\n        }\n      }\n    }\n  }\n  return new _observe(target, arr, callback)\n}\n\nobaa.methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\nobaa.triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nobaa.isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nobaa.isString = function(obj) {\n  return typeof obj === 'string'\n}\n\nobaa.isInArray = function(arr, item) {\n  for (var i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nobaa.isFunction = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\nobaa._getRootName = function(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n}\n\nobaa.set = function(obj, prop, value, exec) {\n  if (!exec) {\n    obj[prop] = value\n  }\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n  if (exec) {\n    obj[prop] = value\n  }\n}\n\nArray.prototype.size = function(length) {\n  this.length = length\n}\n\nexport default obaa\n","const callbacks = []\nconst nextTickCallback = []\n\nexport function tick(fn, scope) {\n  callbacks.push({ fn, scope })\n}\n\nexport function fireTick() {\n  callbacks.forEach(item => {\n    item.fn.call(item.scope)\n  })\n\n  nextTickCallback.forEach(nextItem => {\n    nextItem.fn.call(nextItem.scope)\n  })\n  nextTickCallback.length = 0\n}\n\nexport function nextTick(fn, scope) {\n  nextTickCallback.push({ fn, scope })\n}\n","import obaa from './obaa'\nimport { fireTick } from './tick'\n\nexport function proxyUpdate(ele) {\n  let timeout = null\n  obaa(ele.data, () => {\n    if (ele._willUpdate) {\n      return\n    }\n    if (ele.constructor.mergeUpdate) {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        ele.update()\n        fireTick()\n      }, 0)\n    } else {\n      ele.update()\n      fireTick()\n    }\n  })\n}\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  FORCE_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend, applyRef } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, collectComponent } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport {\n  addScopedAttrStatic,\n  getCtorName,\n  scopeHost\n} from '../style'\nimport { proxyUpdate } from '../observe'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n  if (component._disable) return\n  component._disable = true\n\n  if ((component.__ref = props.ref)) delete props.ref\n  if ((component.__key = props.key)) delete props.key\n\n  if (!component.base || mountAll) {\n    if (component.beforeInstall) component.beforeInstall()\n    if (component.install) component.install()\n    if (component.constructor.observe) {\n      proxyUpdate(component)\n    }\n  } else if (component.receiveProps) {\n    component.receiveProps(props, component.data, component.props)\n  }\n\n  if (context && context !== component.context) {\n    if (!component.prevContext) component.prevContext = component.context\n    component.context = context\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (opts !== NO_RENDER) {\n    if (\n      opts === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  applyRef(component.__ref, component)\n}\n\nfunction shallowComparison(old, attrs) {\n  let name\n\n  for (name in old) {\n    if (attrs[name] == null && old[name] != null) {\n      return true\n    }\n  }\n\n  if (old.children.length > 0 || attrs.children.length > 0) {\n    return true\n  }\n\n  for (name in attrs) {\n    if (name != 'children') {\n      let type = typeof attrs[name]\n      if (type == 'function' || type == 'object') {\n        return true\n      } else if (attrs[name] != old[name]) {\n        return true\n      }\n    }\n  }\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild) {\n  if (component._disable) return\n\n  let props = component.props,\n    data = component.data,\n    context = component.context,\n    previousProps = component.prevProps || props,\n    previousState = component.prevState || data,\n    previousContext = component.prevContext || context,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    rendered,\n    inst,\n    cbase\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    component.data = previousState\n    component.context = previousContext\n    if (component.store || opts == FORCE_RENDER || shallowComparison(previousProps, props)) {\n      skip = false\n      if (component.beforeUpdate) {\n        component.beforeUpdate(props, data, context)\n      }\n    } else {\n      skip = true\n    }\n    component.props = props\n    component.data = data\n    component.context = context\n  }\n\n  component.prevProps = component.prevState = component.prevContext = component.nextBase = null\n\n  if (!skip) {\n    component.beforeRender && component.beforeRender()\n    rendered = component.render(props, data, context)\n\n    //don't rerender\n    if (component.constructor.css || component.css) {\n      addScopedAttrStatic(\n        rendered,\n        '_s' + getCtorName(component.constructor)\n      )\n    }\n\n    scopeHost(rendered, component.scopedCssAttr)\n\n    // context to pass to the child, can be updated via (grand-)parent component\n    if (component.getChildContext) {\n      context = extend(extend({}, context), component.getChildContext())\n    }\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, context)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || opts === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          context,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.unshift(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n    if (component.afterUpdate) {\n      //deprecated\n      component.afterUpdate(previousProps, previousState, previousContext)\n    }\n    if (component.updated) {\n      component.updated(previousProps, previousState, previousContext)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, context, vnode)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n\tif (component.uninstall) component.uninstall()\n\n\tif (component.store && component.store.instances) {\n\t\tfor (let i = 0, len = component.store.instances.length; i < len; i++) {\n\t\t\tif (component.store.instances[i] === component) {\n\t\t\t\tcomponent.store.instances.splice(i, 1)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] != null) applyRef(base[ATTR_KEY].ref, null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    collectComponent(component)\n\n    removeChildren(base)\n  }\n\n  applyRef(component.__ref, null)\n}\n","import { FORCE_RENDER } from './constants'\nimport { renderComponent } from './vdom/component'\nimport options from './options'\nimport { nProps, assign } from './util'\n\nlet id = 0\n\nexport default class Component {\n  static is = 'WeElement'\n\n  constructor(props, store) {\n    this.props = assign(\n      nProps(this.constructor.props),\n      this.constructor.defaultProps,\n      props\n    )\n    this.elementId = id++\n    this.data = this.constructor.data || this.data || {}\n\n    this._preCss = null\n\n    this.store = store\n  }\n\n  update(callback) {\n    this._willUpdate = true\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n    this._willUpdate = false\n  }\n\n  fire(type, data) {\n    Object.keys(this.props).every(key => {\n      if ('on' + type.toLowerCase() === key.toLowerCase()) {\n        this.props[key]({ detail: data })\n        return false\n      }\n      return true\n    })\n  }\n\n  render() {}\n}\n","import { diff } from './vdom/diff'\nimport obaa from './obaa'\nimport { getUse } from './util'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {object} [store]\n *\t@public\n */\nexport function render(vnode, parent, store, empty, merge) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n  obsStore(store)\n\n  if (empty) {\n    while (parent.firstChild) {\n      parent.removeChild(parent.firstChild)\n    }\n  }\n\n  if (merge) {\n    merge =\n      typeof merge === 'string'\n        ? document.querySelector(merge)\n        : merge\n  }\n\n  return diff(merge, vnode, store, false, parent, false)\n}\n\nfunction obsStore(store){\n  if (store && store.data) {\n    store.instances = []\n    extendStoreUpate(store)\n\n    obaa(store.data, (prop, val, old, path) => {\n\t\t\tconst patchs = {}\n      const key = fixPath(path + '-' + prop)\n      patchs[key] = true\n\t\t\tstore.update(patchs)\n    })\n  }\n}\n\nexport function merge(vnode, merge, store) {\n  obsStore(store)\n\n  merge =\n    typeof merge === 'string'\n      ? document.querySelector(merge)\n      : merge\n\n  return diff(merge, vnode, store)\n}\n\nfunction extendStoreUpate(store) {\n  store.update = function(patch) {\n    const updateAll = matchGlobalData(this.globalData, patch)\n    if (Object.keys(patch).length > 0) {\n      this.instances.forEach(instance => {\n        if (\n          updateAll ||\n          this.updateAll ||\n          (instance.constructor.updatePath &&\n\t\t\t\t\t\tneedUpdate(patch, instance.constructor.updatePath)) ||\n\t\t\t\t\t\t(instance._updatePath &&\n\t\t\t\t\t\t\tneedUpdate(patch, instance._updatePath))\n        ) {\n\t\t\t\t\t//update this.use\n\t\t\t\t\tif(instance.constructor.use){\n\t\t\t\t\t\tinstance.use = getUse(store.data, instance.constructor.use)\n\t\t\t\t\t} else if(instance.initUse){\n\t\t\t\t\t\tinstance.use = getUse(store.data, instance.initUse())\n\t\t\t\t\t}\n\n          instance.update()\n        }\n      })\n      this.onChange && this.onChange(patch)\n    }\n  }\n}\n\nexport function matchGlobalData(globalData, diffResult) {\n  if (!globalData) return false\n  for (let keyA in diffResult) {\n    if (globalData.indexOf(keyA) > -1) {\n      return true\n    }\n    for (let i = 0, len = globalData.length; i < len; i++) {\n      if (includePath(keyA, globalData[i])) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nexport function needUpdate(diffResult, updatePath) {\n  for (let keyA in diffResult) {\n    if (updatePath[keyA]) {\n      return true\n    }\n    for (let keyB in updatePath) {\n      if (includePath(keyA, keyB)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction includePath(pathA, pathB) {\n  if (pathA.indexOf(pathB) === 0) {\n    const next = pathA.substr(pathB.length, 1)\n    if (next === '[' || next === '.') {\n      return true\n    }\n  }\n  return false\n}\n\nexport function fixPath(path) {\n  let mpPath = ''\n  const arr = path.replace('#-', '').split('-')\n  arr.forEach((item, index) => {\n    if (index) {\n      if (isNaN(Number(item))) {\n        mpPath += '.' + item\n      } else {\n        mpPath += '[' + item + ']'\n      }\n    } else {\n      mpPath += item\n    }\n  })\n  return mpPath\n}\n\nfunction getArrayPatch(path, store) {\n  const arr = path.replace('/', '').split('/')\n  let current = store.data[arr[0]]\n  for (let i = 1, len = arr.length; i < len - 1; i++) {\n    current = current[arr[i]]\n  }\n  return { k: fixArrPath(path), v: current }\n}\n\nfunction fixArrPath(path) {\n  let mpPath = ''\n  const arr = path.replace('/', '').split('/')\n  const len = arr.length\n  arr.forEach((item, index) => {\n    if (index < len - 1) {\n      if (index) {\n        if (isNaN(Number(item))) {\n          mpPath += '.' + item\n        } else {\n          mpPath += '[' + item + ']'\n        }\n      } else {\n        mpPath += item\n      }\n    }\n  })\n  return mpPath\n}\n","export function rpx(str) {\n  return str.replace(/([1-9]\\d*|0)(\\.\\d*)*rpx/g, (a, b) => {\n    return (window.innerWidth * Number(b)) / 750 + 'px'\n  })\n}\n","import Component from './component'\n\nexport default class ModelView extends Component {\n  static observe = true\n\n  static mergeUpdate = true\n\n  beforeInstall() {\n    this.data = this.vm.data\n  }\n}\n","/**\n * classNames based on https://github.com/JedWatson/classnames\n * by Jed Watson\n * Licensed under the MIT License\n * https://github.com/JedWatson/classnames/blob/master/LICENSE\n * modified by dntzhang\n */\n\nvar hasOwn = {}.hasOwnProperty\n\nexport function classNames() {\n  var classes = []\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (!arg) continue\n\n    var argType = typeof arg\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg)\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = classNames.apply(null, arg)\n      if (inner) {\n        classes.push(inner)\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n\nexport function extractClass() {\n  const [props, ...args] = Array.prototype.slice.call(arguments, 0)\n  if (props) {\n    if (props['class']) {\n      args.unshift(props['class'])\n      delete props['class']\n    } else if (props.className) {\n      args.unshift(props.className)\n      delete props.className\n    }\n  }\n  if (args.length > 0) {\n    return { 'class': classNames.apply(null, args) }\n  }\n}\n","/**\n * preact-render-to-string based on preact-render-to-string\n * by Jason Miller\n * Licensed under the MIT License\n * https://github.com/developit/preact-render-to-string\n *\n * modified by dntzhang\n */\n\nimport options from './options'\n\nimport {\n  addScopedAttrStatic,\n  getCtorName,\n  scopeHost,\n  scoper\n} from './style'\n\n\nconst encodeEntities = s => String(s)\n  .replace(/&/g, '&amp;')\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;')\n  .replace(/\"/g, '&quot;');\n\nconst indent = (s, char) => String(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nconst mapping = options.mapping\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\n\nconst isLargeString = (s, length, ignoreLines) => (String(s).length > (length || 40) || (!ignoreLines && String(s).indexOf('\\n') !== -1) || String(s).indexOf('<') !== -1);\n\nconst JS_TO_CSS = {};\n\n// Convert an Object style to a CSSText string\nfunction styleObjToCss(s) {\n  let str = '';\n  for (let prop in s) {\n    let val = s[prop];\n    if (val != null) {\n      if (str) str += ' ';\n      // str += jsToCss(prop);\n      str += JS_TO_CSS[prop] || (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g, '-$1').toLowerCase());\n      str += ': ';\n      str += val;\n      if (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\n        str += 'px';\n      }\n      str += ';';\n    }\n  }\n  return str || undefined;\n}\n\nexport function renderToString(vnode, opts, store, isSvgMode){\n  store = store || {};\n  opts = Object.assign({\n    scopedCSS: true\n  },opts)\n  const css = {}\n  const html = _renderToString(vnode, opts, store, isSvgMode, css)\n  return {\n    css: Object.values(css),\n    html: html\n  }\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToString(vnode, opts, store, isSvgMode, css) {\n  if (vnode == null || typeof vnode === 'boolean') {\n    return '';\n  }\n\n  let nodeName = vnode.nodeName,\n    attributes = vnode.attributes,\n    isComponent = false;\n  \n\n  let pretty = true && opts.pretty,\n    indentChar = pretty && typeof pretty === 'string' ? pretty : '\\t';\n\n  // #text nodes\n  if (typeof vnode !== 'object' && !nodeName) {\n    return encodeEntities(vnode);\n  }\n\n  // components\n  const ctor = mapping[nodeName]\n  if (ctor) {\n    isComponent = true;\n\n    let props = getNodeProps(vnode),\n      rendered;\n    // class-based components\n    let c = new ctor(props, store);\n    // turn off stateful re-rendering:\n    c._disable = c.__x = true;\n    c.props = props;\n    c.store = store;\n    if (c.install) c.install();\n    if (c.beforeRender) c.beforeRender();\n    rendered = c.render(c.props, c.data, c.store);\n\n    if(opts.scopedCSS){\n\n      if (c.constructor.css || c.css) {\n\n        const cssStr = c.constructor.css ? c.constructor.css : (typeof c.css === 'function' ? c.css() : c.css)\n        const cssAttr = '_s' + getCtorName(c.constructor)\n        css[cssAttr] = {\n          id: cssAttr,\n          css: scoper(cssStr, cssAttr)\n        }\n        addScopedAttrStatic(\n          rendered,\n          cssAttr\n        )\n      }\n    \n      c.scopedCSSAttr = vnode.css\n      scopeHost(rendered, c.scopedCSSAttr)\n    }\n\n    return _renderToString(rendered, opts, store, false, css);\n  }\n\n\n  // render JSX to HTML\n  let s = '', html;\n\n  if (attributes) {\n    let attrs = Object.keys(attributes);\n\n    // allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n    if (opts && opts.sortAttributes === true) attrs.sort();\n\n    for (let i = 0; i < attrs.length; i++) {\n      let name = attrs[i],\n        v = attributes[name];\n      if (name === 'children') continue;\n\n      if (name.match(/[\\s\\n\\\\/='\"\\0<>]/)) continue;\n\n      if (!(opts && opts.allAttributes) && (name === 'key' || name === 'ref')) continue;\n\n      if (name === 'className') {\n        if (attributes['class']) continue;\n        name = 'class';\n      }\n      else if (isSvgMode && name.match(/^xlink:?./)) {\n        name = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n      }\n\n      if (name === 'style' && v && typeof v === 'object') {\n        v = styleObjToCss(v);\n      }\n\n      let hooked = opts.attributeHook && opts.attributeHook(name, v, store, opts, isComponent);\n      if (hooked || hooked === '') {\n        s += hooked;\n        continue;\n      }\n\n      if (name === 'dangerouslySetInnerHTML') {\n        html = v && v.__html;\n      }\n      else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n        if (v === true || v === '') {\n          v = name;\n          // in non-xml mode, allow boolean attributes\n          if (!opts || !opts.xml) {\n            s += ' ' + name;\n            continue;\n          }\n        }\n        s += ` ${name}=\"${encodeEntities(v)}\"`;\n      }\n    }\n  }\n\n  // account for >1 multiline attribute\n  if (pretty) {\n    let sub = s.replace(/^\\n\\s*/, ' ');\n    if (sub !== s && !~sub.indexOf('\\n')) s = sub;\n    else if (pretty && ~s.indexOf('\\n')) s += '\\n';\n  }\n\n  s = `<${nodeName}${s}>`;\n  if (String(nodeName).match(/[\\s\\n\\\\/='\"\\0<>]/)) throw s;\n\n  let isVoid = String(nodeName).match(VOID_ELEMENTS);\n  if (isVoid) s = s.replace(/>$/, ' />');\n\n  let pieces = [];\n  if (html) {\n    // if multiline, indent.\n    if (pretty && isLargeString(html)) {\n      html = '\\n' + indentChar + indent(html, indentChar);\n    }\n    s += html;\n  }\n  else if (vnode.children) {\n    let hasLarge = pretty && ~s.indexOf('\\n');\n    for (let i = 0; i < vnode.children.length; i++) {\n      let child = vnode.children[i];\n      if (child != null && child !== false) {\n        let childSvgMode = nodeName === 'svg' ? true : nodeName === 'foreignObject' ? false : isSvgMode,\n          ret = _renderToString(child, opts, store, childSvgMode, css);\n        if (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\n        if (ret) pieces.push(ret);\n      }\n    }\n    if (pretty && hasLarge) {\n      for (let i = pieces.length; i--;) {\n        pieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\n      }\n    }\n  }\n\n  if (pieces.length) {\n    s += pieces.join('');\n  }\n  else if (opts && opts.xml) {\n    return s.substring(0, s.length - 1) + ' />';\n  }\n\n  if (!isVoid) {\n    if (pretty && ~s.indexOf('\\n')) s += '\\n';\n    s += `</${nodeName}>`;\n  }\n\n  return s\n}\n\nfunction assign(obj, props) {\n  for (let i in props) obj[i] = props[i];\n  return obj;\n}\n\nfunction getNodeProps(vnode) {\n  let props = assign({}, vnode.attributes);\n  props.children = vnode.children;\n\n  let defaultProps = vnode.nodeName.defaultProps;\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i];\n      }\n    }\n  }\n\n  return props;\n}","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: []\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","import { define } from './define'\n\nexport function tag(name) {\n  return function(target) {\n    define(name, target)\n  }\n}\n","export function getHost(component) {\n  let base = component.base\n  if (base) {\n    while (base.parentNode) {\n      if (base.parentNode._component) {\n        return base.parentNode._component\n      } else {\n        base = base.parentNode\n      }\n    }\n  }\n}","var n=function(t,r,u,e){for(var p=1;p<r.length;p++){var s=r[p++],a=\"number\"==typeof s?u[s]:s;1===r[p]?e[0]=a:2===r[p]?(e[1]=e[1]||{})[r[++p]]=a:3===r[p]?e[1]=Object.assign(e[1]||{},a):e.push(r[p]?t.apply(null,n(t,a,u,[\"\",null])):a)}return e},t=function(n){for(var t,r,u=1,e=\"\",p=\"\",s=[0],a=function(n){1===u&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?s.push(n||e,0):3===u&&(n||e)?(s.push(n||e,1),u=2):2===u&&\"...\"===e&&n?s.push(n,3):2===u&&e&&!n?s.push(!0,2,e):4===u&&r&&(s.push(n||e,2,r),r=\"\"),e=\"\"},f=0;f<n.length;f++){f&&(1===u&&a(),a(f));for(var h=0;h<n[f].length;h++)t=n[f][h],1===u?\"<\"===t?(a(),s=[s],u=3):e+=t:p?t===p?p=\"\":e+=t:'\"'===t||\"'\"===t?p=t:\">\"===t?(a(),u=1):u&&(\"=\"===t?(u=4,r=e,e=\"\"):\"/\"===t?(a(),3===u&&(s=s[0]),u=s,(s=s[0]).push(u,4),u=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(a(),u=2):e+=t)}return a(),s},r=\"function\"==typeof Map,u=r?new Map:{},e=r?function(n){var r=u.get(n);return r||u.set(n,r=t(n)),r}:function(n){for(var r=\"\",e=0;e<n.length;e++)r+=n[e].length+\"-\"+n[e];return u[r]||(u[r]=t(n))};export default function(t){var r=n(this,e(t),arguments,[]);return r.length>1?r:r[0]}\n","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport Component from './component'\nimport { render, merge } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\nimport { rpx } from './rpx'\nimport { tag } from './tag'\nimport ModelView from './model-view'\nimport { classNames, extractClass } from './class'\nimport { getHost } from './get-host'\nimport { renderToString } from './render-to-string'\nimport htm from 'htm'\n\nconst html = htm.bind(h)\n\nconst WeElement = Component\nconst defineElement = define\nfunction createRef() {\n  return {}\n}\n\noptions.root.Omi = {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm\n}\noptions.root.omi = options.root.Omi\noptions.root.Omi.version = 'omio-2.2.1'\n\nexport default {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm\n}\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  getHost,\n  renderToString,\n  tag,\n  merge,\n  html,\n  htm\n}\n"]}